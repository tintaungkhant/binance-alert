{
  "version": 3,
  "sources": ["../src/browser.ts", "../src/helpers.ts", "../src/start_browser.ts"],
  "sourcesContent": ["import puppeteer, { Browser as PuppeteerBrowser } from \"puppeteer\"\nimport { getCache, setCache } from \"./helpers\"\n\nexport default class Browser {\n    browser!: PuppeteerBrowser\n\n    async create() {\n        let max_attempt = 2;\n        let attempts = 0;\n\n        do {\n            try {\n                attempts++;\n\n                let wsEndpoint = await getCache(\"wsEndpoint\");\n\n                if (wsEndpoint) {\n                    this.browser = await puppeteer.connect({\n                        browserWSEndpoint: wsEndpoint\n                    });\n\n                    console.log(\"Browser connected\");\n\n                    return this.browser;\n                }\n\n                if (!wsEndpoint) {\n                    this.browser = await puppeteer.launch({\n                        userDataDir: \"./user_data\",\n                        headless: true\n                    });\n\n                    wsEndpoint = this.browser.wsEndpoint();\n\n                    await setCache(\"wsEndpoint\", wsEndpoint);\n\n                    console.log(\"Browser created\");\n\n                    return this.browser;\n                }\n            } catch (error) {\n                if (attempts === max_attempt) {\n                    console.log(\"Error at starting browser\");\n                } else {\n                    await setCache(\"wsEndpoint\", \"\");\n                }\n            }\n        } while (attempts < max_attempt);\n    }\n}", "import { createClient } from \"redis\";\n\nconst client = createClient();\n\nexport async function setCache(key: string, value: any) {\n    await client.connect();\n\n    await client.set(key, value);\n\n    await client.disconnect();\n}\n\nexport async function getCache(key: string) {\n    await client.connect();\n\n    let value = await client.get(key);\n\n    await client.disconnect();\n\n    return value;\n}", "import Browser from \"./browser\";\n\n(async function(){\n    const browser = new Browser;\n\n    await browser.create();\n})();"],
  "mappings": "AAAA,OAAOA,MAAgD,YCAvD,OAAS,gBAAAC,MAAoB,QAE7B,IAAMC,EAASD,EAAa,EAE5B,eAAsBE,EAASC,EAAaC,EAAY,CACpD,MAAMH,EAAO,QAAQ,EAErB,MAAMA,EAAO,IAAIE,EAAKC,CAAK,EAE3B,MAAMH,EAAO,WAAW,CAC5B,CAEA,eAAsBI,EAASF,EAAa,CACxC,MAAMF,EAAO,QAAQ,EAErB,IAAIG,EAAQ,MAAMH,EAAO,IAAIE,CAAG,EAEhC,aAAMF,EAAO,WAAW,EAEjBG,CACX,CDjBA,IAAqBE,EAArB,KAA6B,CACzB,QAEA,MAAM,QAAS,CACX,IAAIC,EAAc,EACdC,EAAW,EAEf,EACI,IAAI,CACAA,IAEA,IAAIC,EAAa,MAAMC,EAAS,YAAY,EAE5C,GAAID,EACA,YAAK,QAAU,MAAME,EAAU,QAAQ,CACnC,kBAAmBF,CACvB,CAAC,EAED,QAAQ,IAAI,mBAAmB,EAExB,KAAK,QAGhB,GAAI,CAACA,EACD,YAAK,QAAU,MAAME,EAAU,OAAO,CAClC,YAAa,cACb,SAAU,EACd,CAAC,EAEDF,EAAa,KAAK,QAAQ,WAAW,EAErC,MAAMG,EAAS,aAAcH,CAAU,EAEvC,QAAQ,IAAI,iBAAiB,EAEtB,KAAK,OAEpB,MAAgB,CACRD,IAAaD,EACb,QAAQ,IAAI,2BAA2B,EAEvC,MAAMK,EAAS,aAAc,EAAE,CAEvC,OACKJ,EAAWD,EACxB,CACJ,GE/CC,gBAAgB,CAGb,MAFgB,IAAIM,IAEN,OAAO,CACzB,GAAG",
  "names": ["puppeteer", "createClient", "client", "setCache", "key", "value", "getCache", "Browser", "max_attempt", "attempts", "wsEndpoint", "getCache", "puppeteer", "setCache", "Browser"]
}
