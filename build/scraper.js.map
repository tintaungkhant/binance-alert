{
  "version": 3,
  "sources": ["../src/scraper.ts"],
  "sourcesContent": ["import { Page, Browser as PuppeteerBrowser } from \"puppeteer\"\nimport * as dotenv from \"dotenv\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nimport { getCache, setCache } from \"./helpers\";\ndotenv.config();\nexport default class Scraper {\n    page!: Page\n    constructor(private browser: PuppeteerBrowser) {\n\n    }\n\n    async start() {\n        try {\n            this.page = await this.browser.newPage();\n\n            await this.page.setViewport({ width: 600, height: 600 })\n\n            await this.page.goto(\"https://p2p.binance.com/trade/all-payments/USDT?fiat=AED\");\n\n            console.log(\"Page loaded\");\n\n            // await this.storeSiteSettings();\n\n            // return;\n\n            await this.setUpSiteSettings();\n\n            console.log(\"Selecting currency\");\n\n            await this.delay(1);\n\n            let currency_input_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div');\n            let currency_input = await this.page.$(currency_input_xp);\n\n            if (!currency_input) {\n                console.log(\"Currency input not found\");\n\n                await this.sendToTelegram(\"Currency input not found\")\n\n                return;\n            }\n\n            console.log(\"Clicking over currency input\");\n\n            await currency_input.click();\n\n            await this.delay(1);\n\n            console.log(\"Searching currency\");\n\n            let currency_search_input_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div[2]/div/div/div[1]/div/input');\n\n            let currency_search_input = await this.page.$(currency_search_input_xp);\n\n            if (!currency_search_input) {\n                console.log(\"Currency search input not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            console.log(\"Typing MMK\");\n\n            await currency_search_input.type(\"MMK\", { delay: 200 });\n\n            await this.delay(1);\n\n            console.log(\"Clicking currency button\");\n\n            let currency_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div[2]/div/div/div[2]/div/div');\n\n            let currency_button = await this.page.$(currency_xp);\n\n            if (!currency_button) {\n                console.log(\"Currency button not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            await currency_button.click();\n\n            console.log(\"Currency selected\");\n\n            await this.delay(2);\n\n            console.log(\"Selecting first item\");\n\n            let first_item_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[3]/div/div[1]/div[1]/div[2]/div[1]/div/div[1]');\n\n            let first_item = await this.page.$(first_item_xp);\n\n            if (!first_item) {\n                console.log(\"First item not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            console.log(\"Selected first item\");\n\n            let price = await this.page.evaluate((el) => el.textContent, first_item);\n\n            if (price) {\n                const regex = /[^0-9]/g;\n                price = price.replace(regex, \"\");\n\n                let buy_price_threshold = process.env.BUY_PRICE_THRESHOLD;\n                buy_price_threshold = buy_price_threshold ? buy_price_threshold : \"0\";\n\n                console.info(\"Price threshold \" + buy_price_threshold);\n                console.info(\"Price: \" + price);\n\n                if (price <= buy_price_threshold) {\n                    await this.sendBuyPriceAlert(buy_price_threshold, price);\n                }\n            }\n\n            await this.page.close();\n\n            await this.browser.disconnect();\n\n            console.log(\"Browser disconnected\")\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    xpath(selector: string) {\n        return `::-p-xpath(${selector})`;\n    }\n\n    async delay(seconds: number) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, seconds * 1000);\n        });\n    }\n\n    async sendBuyPriceAlert(buy_price_threshold: string, price: string) {\n        await this.sendToTelegram(`Price is below threshold\\nThreshold: ${buy_price_threshold}\\nPrice: ${price}`);\n    }\n\n    async sendToTelegram(text: string) {\n        let token = process.env.TELEGRAM_BOT_TOKEN;\n\n        // let url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n        let url = \"https://api.telegram.org/bot\" + token + \"/sendMessage\";\n\n        // url = \"https://jsonplaceholder.typicode.com/todos/1\"\n\n        console.log(url);\n\n        let group_id = process.env.TELEGRAM_GROUP_ID;\n\n        text = \"test\";\n\n        let params = {\n            chat_id: group_id ? group_id : \"\",\n            text\n        };\n\n        await axios.get(url, { params });\n    }\n\n    async storeSiteSettings() {\n        let cookies = await this.page.cookies();\n\n        fs.writeFileSync(\"site-settings/cookies.json\", JSON.stringify(cookies, null, 2));\n\n        let local_storage = await this.page.evaluate(() => {\n            let json = {};\n            for (let i = 0; i < localStorage.length; i++) {\n                let key = localStorage.key(i);\n\n                if (!key) continue;\n\n                json[key] = localStorage.getItem(key);\n            }\n            return json;\n        });\n\n        fs.writeFileSync(\"site-settings/local_storage.json\", JSON.stringify(local_storage, null, 2));\n    }\n\n    async setUpSiteSettings() {\n        let cookies = fs.readFileSync(\"site-settings/cookies.json\", \"utf-8\");\n\n        if (cookies) {\n            await this.page.setCookie(...JSON.parse(cookies));\n        }\n\n        let local_storage = fs.readFileSync(\"site-settings/local_storage.json\", \"utf-8\");\n\n        if (local_storage) {\n            await this.page.evaluate((local_storage) => {\n                for (let key in local_storage) {\n                    localStorage.setItem(key, local_storage[key]);\n                }\n            }, JSON.parse(local_storage));\n        }\n\n        await this.page.reload();\n\n        await this.delay(2);\n    }\n}"],
  "mappings": "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",
  "names": ["local_storage"]
}
