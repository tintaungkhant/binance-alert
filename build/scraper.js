import*as h from"dotenv";import c from"fs";h.config();var u=class{constructor(e){this.browser=e}page;async start(){try{this.sendToTelegram("hie");return}catch(e){console.log(e)}}xpath(e){return`::-p-xpath(${e})`}async delay(e){return new Promise(t=>{setTimeout(t,e*1e3)})}async sendBuyPriceAlert(e,t){await this.sendToTelegram(`Price is below threshold
Threshold: ${e}
Price: ${t}`)}async sendToTelegram(e){let o=`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;console.log(o);let i=process.env.TELEGRAM_GROUP_ID,a={chat_id:i||"",text:e},l=new URLSearchParams(a).toString(),d=`${o}?${l}`;await fetch(d).then(r=>{if(!r.ok)throw new Error("Network response was not ok "+r.statusText);return r.json()})}async storeSiteSettings(){let e=await this.page.cookies();c.writeFileSync("site-settings/cookies.json",JSON.stringify(e,null,2));let t=await this.page.evaluate(()=>{let o={};for(let i=0;i<localStorage.length;i++){let a=localStorage.key(i);a&&(o[a]=localStorage.getItem(a))}return o});c.writeFileSync("site-settings/local_storage.json",JSON.stringify(t,null,2))}async setUpSiteSettings(){let e=c.readFileSync("site-settings/cookies.json","utf-8");e&&await this.page.setCookie(...JSON.parse(e));let t=c.readFileSync("site-settings/local_storage.json","utf-8");t&&await this.page.evaluate(o=>{for(let i in o)localStorage.setItem(i,o[i])},JSON.parse(t)),await this.page.reload(),await this.delay(2)}};export{u as default};
//# sourceMappingURL=scraper.js.map
