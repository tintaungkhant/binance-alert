{
  "version": 3,
  "sources": ["../src/browser.ts", "../src/helpers.ts", "../src/scraper.ts", "../src/start_scraper.ts"],
  "sourcesContent": ["import puppeteer, { Browser as PuppeteerBrowser } from \"puppeteer\"\nimport { getCache, setCache } from \"./helpers\"\n\nexport default class Browser {\n    browser!: PuppeteerBrowser\n\n    async create() {\n        let max_attempt = 2;\n        let attempts = 0;\n\n        do {\n            try {\n                attempts++;\n\n                let wsEndpoint = await getCache(\"wsEndpoint\");\n\n                if (wsEndpoint) {\n                    this.browser = await puppeteer.connect({\n                        browserWSEndpoint: wsEndpoint\n                    });\n\n                    console.log(\"Browser connected\");\n\n                    return this.browser;\n                }\n\n                if (!wsEndpoint) {\n                    this.browser = await puppeteer.launch({\n                        userDataDir: \"./user_data\",\n                        headless: true\n                    });\n\n                    wsEndpoint = this.browser.wsEndpoint();\n\n                    await setCache(\"wsEndpoint\", wsEndpoint);\n\n                    console.log(\"Browser created\");\n\n                    return this.browser;\n                }\n            } catch (error) {\n                if (attempts === max_attempt) {\n                    console.log(\"Error at starting browser\");\n                } else {\n                    await setCache(\"wsEndpoint\", \"\");\n                }\n            }\n        } while (attempts < max_attempt);\n    }\n}", "import { createClient } from \"redis\";\n\nconst client = createClient();\n\nexport async function setCache(key: string, value: any) {\n    await client.connect();\n\n    await client.set(key, value);\n\n    await client.disconnect();\n}\n\nexport async function getCache(key: string) {\n    await client.connect();\n\n    let value = await client.get(key);\n\n    await client.disconnect();\n\n    return value;\n}", "import puppeteer, { Browser as PuppeteerBrowser } from \"puppeteer\"\n\nexport default class Scraper {\n    constructor(private browser: PuppeteerBrowser) {\n\n    }\n\n    async start() {\n        try {\n            const page = await this.browser.newPage();\n\n            await page.goto(\"https://p2p.binance.com/trade/all-payments/USDT?fiat=AED\");\n\n            this.delay(2);\n\n            let aa = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[1]/div[2]/div/div/div[1]');\n            let bb = await page.$(aa);\n\n            if(bb){\n                await bb.hover();\n            }\n\n            let cc = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[1]/div[2]/div/div/div[2]/div/div/div[2]/div');\n\n            let dd = await page.$$(cc);\n\n            let ee = Array.from(dd);\n\n            for (let i = 0; i < ee.length; i++) {\n                let ff = await page.evaluate((el) => el.textContent, ee[i]);\n\n                ff = ff ? ff.trim() : \"\";\n\n                if (ff === \"MMK\") {\n                    console.log(\"hi\")\n                    await ee[i].click();\n                    break;\n                }\n            }\n\n            await this.delay(2);\n\n            let xpath = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[3]/div/div[1]/div[1]/div[2]/div[1]/div/div[1]');\n\n            let firstItem = await page.$(xpath);\n\n            if (firstItem) {\n                let price = await page.evaluate((el) => el.textContent, firstItem);\n\n                console.log(price);\n            }\n\n            await page.close();\n\n            await this.browser.disconnect();\n\n            console.log(\"Browser disconnected\")\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    xpath(selector: string) {\n        return `::-p-xpath(${selector})`;\n    }\n\n    async delay(seconds: number) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, seconds * 1000);\n        });\n    }\n}", "import Browser from \"./browser\";\nimport Scraper from \"./scraper\";\n\nvar locked = false;\n\n(async () => {\n    await run();\n\n    setInterval(async () => {\n        if (locked) {\n            return;\n        }\n\n        locked = true;\n\n        await run();\n    \n        locked = false;\n    }, 1000);\n})();\n\n\nasync function run() {\n    const browser = await(new Browser).create();\n\n    if (!browser) {\n        console.log(\"Browser not created\");\n        return;\n    }\n\n    const scraper = new Scraper(browser);\n\n    await scraper.start();\n};"],
  "mappings": "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",
  "names": ["puppeteer", "createClient", "client", "setCache", "key", "value", "getCache", "Browser", "max_attempt", "attempts", "wsEndpoint", "getCache", "puppeteer", "setCache", "Scraper", "browser", "page", "aa", "bb", "cc", "dd", "ee", "ff", "el", "xpath", "firstItem", "price", "error", "selector", "seconds", "resolve", "locked", "run", "browser", "Browser", "Scraper"]
}
