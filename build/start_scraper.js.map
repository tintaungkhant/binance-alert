{
  "version": 3,
  "sources": ["../src/browser.ts", "../src/helpers.ts", "../src/scraper.ts", "../src/start_scraper.ts"],
  "sourcesContent": ["import puppeteer, { Browser as PuppeteerBrowser } from \"puppeteer\"\nimport { getCache, setCache } from \"./helpers\"\n\nexport default class Browser {\n    browser!: PuppeteerBrowser\n\n    async create() {\n        let max_attempt = 2;\n        let attempts = 0;\n\n        do {\n            try {\n                attempts++;\n\n                let wsEndpoint = await getCache(\"wsEndpoint\");\n\n                if (wsEndpoint) {\n                    this.browser = await puppeteer.connect({\n                        browserWSEndpoint: wsEndpoint\n                    });\n\n                    console.log(\"Browser connected\");\n                    console.log(\"WS Endpoint: \" + wsEndpoint)\n\n                    return this.browser;\n                }\n\n                if (!wsEndpoint) {\n                    const args = [\n                        '--autoplay-policy=user-gesture-required',\n                        '--disable-background-networking',\n                        '--disable-background-timer-throttling',\n                        '--disable-backgrounding-occluded-windows',\n                        '--disable-breakpad',\n                        '--disable-client-side-phishing-detection',\n                        '--disable-component-update',\n                        '--disable-default-apps',\n                        '--disable-dev-shm-usage',\n                        '--disable-domain-reliability',\n                        '--disable-extensions',\n                        '--disable-features=AudioServiceOutOfProcess',\n                        '--disable-hang-monitor',\n                        '--disable-ipc-flooding-protection',\n                        '--disable-notifications',\n                        '--disable-offer-store-unmasked-wallet-cards',\n                        '--disable-popup-blocking',\n                        '--disable-print-preview',\n                        '--disable-prompt-on-repost',\n                        '--disable-renderer-backgrounding',\n                        '--disable-setuid-sandbox',\n                        '--disable-speech-api',\n                        '--disable-sync',\n                        '--hide-scrollbars',\n                        '--ignore-gpu-blacklist',\n                        '--metrics-recording-only',\n                        '--mute-audio',\n                        '--no-default-browser-check',\n                        '--no-first-run',\n                        '--no-pings',\n                        '--no-zygote',\n                        '--password-store=basic',\n                        '--use-gl=swiftshader',\n                        '--use-mock-keychain',\n                        '--no-sandbox',\n                    ];\n\n                    this.browser = await puppeteer.launch({\n                        // userDataDir: \"./user_data\",\n                        headless: true,\n                        args\n                    });\n\n                    wsEndpoint = this.browser.wsEndpoint();\n\n                    await setCache(\"wsEndpoint\", wsEndpoint);\n\n                    console.log(\"Browser created\");\n                    console.log(\"WS Endpoint: \" + wsEndpoint)\n\n                    return this.browser;\n                }\n            } catch (error) {\n                if (attempts === max_attempt) {\n                    console.log(error);\n                    console.log(\"Error at starting browser\");\n                } else {\n                    await setCache(\"wsEndpoint\", \"\");\n                }\n            }\n        } while (attempts < max_attempt);\n    }\n}", "import { createClient } from \"redis\";\nimport * as dotenv from \"dotenv\";\ndotenv.config();\n\nconst url = process.env.REDIS_URL;\n\nconst client = createClient({ url });\n\nexport async function setCache(key: string, value: any) {\n    await client.connect();\n\n    await client.set(key, value);\n\n    await client.disconnect();\n}\n\nexport async function getCache(key: string) {\n    await client.connect();\n\n    let value = await client.get(key);\n\n    await client.disconnect();\n\n    return value;\n}", "import { Page, Browser as PuppeteerBrowser } from \"puppeteer\"\nimport * as dotenv from \"dotenv\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nimport { getCache, setCache } from \"./helpers\";\ndotenv.config();\nexport default class Scraper {\n    page!: Page\n    constructor(private browser: PuppeteerBrowser) {\n\n    }\n\n    async start() {\n        try {\n            this.page = await this.browser.newPage();\n\n            await this.page.setViewport({ width: 600, height: 600 })\n\n            await this.page.goto(\"https://p2p.binance.com/trade/all-payments/USDT?fiat=AED\");\n\n            console.log(\"Page loaded\");\n\n            // await this.storeSiteSettings();\n\n            // return;\n\n            await this.setUpSiteSettings();\n\n            console.log(\"Selecting currency\");\n\n            await this.delay(1);\n\n            let currency_input_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div');\n            let currency_input = await this.page.$(currency_input_xp);\n\n            if (!currency_input) {\n                console.log(\"Currency input not found\");\n\n                await this.sendToTelegram(\"Currency input not found\")\n\n                return;\n            }\n\n            console.log(\"Clicking over currency input\");\n\n            await currency_input.click();\n\n            await this.delay(1);\n\n            console.log(\"Searching currency\");\n\n            let currency_search_input_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div[2]/div/div/div[1]/div/input');\n\n            let currency_search_input = await this.page.$(currency_search_input_xp);\n\n            if (!currency_search_input) {\n                console.log(\"Currency search input not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            console.log(\"Typing MMK\");\n\n            await currency_search_input.type(\"MMK\", { delay: 200 });\n\n            await this.delay(1);\n\n            console.log(\"Clicking currency button\");\n\n            let currency_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[1]/div/div[2]/div[2]/div/div[2]/div/div/div[2]/div/div');\n\n            let currency_button = await this.page.$(currency_xp);\n\n            if (!currency_button) {\n                console.log(\"Currency button not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            await currency_button.click();\n\n            console.log(\"Currency selected\");\n\n            await this.delay(2);\n\n            console.log(\"Selecting first item\");\n\n            let first_item_xp = this.xpath('//*[@id=\"__APP\"]/div/div[2]/main/div[2]/div[3]/div/div[1]/div[1]/div[2]/div[1]/div/div[1]');\n\n            let first_item = await this.page.$(first_item_xp);\n\n            if (!first_item) {\n                console.log(\"First item not found\");\n\n                await this.sendToTelegram(\"Currency search input not found\");\n                return;\n            }\n\n            console.log(\"Selected first item\");\n\n            let price = await this.page.evaluate((el) => el.textContent, first_item);\n\n            if (price) {\n                const regex = /[^0-9]/g;\n                price = price.replace(regex, \"\");\n\n                let buy_price_threshold = process.env.BUY_PRICE_THRESHOLD;\n                buy_price_threshold = buy_price_threshold ? buy_price_threshold : \"0\";\n\n                console.info(\"Price threshold \" + buy_price_threshold);\n                console.info(\"Price: \" + price);\n\n                if (price <= buy_price_threshold) {\n                    await this.sendBuyPriceAlert(buy_price_threshold, price);\n                }\n            }\n\n            await this.page.close();\n\n            await this.browser.disconnect();\n\n            console.log(\"Browser disconnected\")\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    xpath(selector: string) {\n        return `::-p-xpath(${selector})`;\n    }\n\n    async delay(seconds: number) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, seconds * 1000);\n        });\n    }\n\n    async sendBuyPriceAlert(buy_price_threshold: string, price: string) {\n        await this.sendToTelegram(`Price is below threshold\\nThreshold: ${buy_price_threshold}\\nPrice: ${price}`);\n    }\n\n    async sendToTelegram(text: string) {\n        let token = process.env.TELEGRAM_BOT_TOKEN;\n\n        let url = `https://api.telegram.org/bot${token}/sendMessage`;\n\n        console.log(url);\n\n        let group_id = process.env.TELEGRAM_GROUP_ID;\n\n        let params = {\n            chat_id: group_id ? group_id : \"\",\n            text\n        };\n\n        await axios.get(url, { params });\n    }\n\n    async storeSiteSettings() {\n        let cookies = await this.page.cookies();\n\n        fs.writeFileSync(\"site-settings/cookies.json\", JSON.stringify(cookies, null, 2));\n\n        let local_storage = await this.page.evaluate(() => {\n            let json = {};\n            for (let i = 0; i < localStorage.length; i++) {\n                let key = localStorage.key(i);\n\n                if (!key) continue;\n\n                json[key] = localStorage.getItem(key);\n            }\n            return json;\n        });\n\n        fs.writeFileSync(\"site-settings/local_storage.json\", JSON.stringify(local_storage, null, 2));\n    }\n\n    async setUpSiteSettings() {\n        let cookies = fs.readFileSync(\"site-settings/cookies.json\", \"utf-8\");\n\n        if (cookies) {\n            await this.page.setCookie(...JSON.parse(cookies));\n        }\n\n        let local_storage = fs.readFileSync(\"site-settings/local_storage.json\", \"utf-8\");\n\n        if (local_storage) {\n            await this.page.evaluate((local_storage) => {\n                for (let key in local_storage) {\n                    localStorage.setItem(key, local_storage[key]);\n                }\n            }, JSON.parse(local_storage));\n        }\n\n        await this.page.reload();\n\n        await this.delay(2);\n    }\n}", "import Browser from \"./browser\";\nimport Scraper from \"./scraper\";\n\nvar locked = false;\n\n(async () => {\n    setInterval(async () => {\n        if (locked) {\n            return;\n        }\n\n        locked = true;\n\n        await run();\n    \n        locked = false;\n    }, 5000);\n})();\n\n\nasync function run() {\n    const browser = await(new Browser).create();\n\n    if (!browser) {\n        console.log(\"Browser not created\");\n        return;\n    }\n\n    const scraper = new Scraper(browser);\n\n    await scraper.start();\n};"],
  "mappings": "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",
  "names": ["puppeteer", "createClient", "dotenv", "url", "client", "setCache", "key", "value", "getCache", "Browser", "max_attempt", "attempts", "wsEndpoint", "getCache", "puppeteer", "args", "setCache", "error", "dotenv", "axios", "fs", "Scraper", "browser", "currency_input_xp", "currency_input", "currency_search_input_xp", "currency_search_input", "currency_xp", "currency_button", "first_item_xp", "first_item", "price", "el", "regex", "buy_price_threshold", "error", "selector", "seconds", "resolve", "text", "url", "group_id", "params", "cookies", "local_storage", "json", "i", "key", "locked", "run", "browser", "Browser", "Scraper"]
}
